//Suppose that all the keys in a binary tree are distinct positive integers. Given the postorder and inorder 
//traversal sequences, you are supposed to output the level order traversal sequence of the corresponding binary tree.
//已知一个二叉树的后序中序求层序。
//先学习了以下如何通过后序中序确定该树。核心思路是对于这个数和它的每个子树，通过后序判断出根，然后通过中序将其分为左右。
//这个题目只需要在此基础上加一个完美二叉树的坐标就好，每个得到的根就放在对应的坐标里，沿着坐标输出就是层序了。
#include<iostream>
#include<vector>
using namespace std;
vector<int> post,in,level(100000,-1);//意思是10000个，每个值为-1 
void pre(int root,int start,int end,int index){
	if(start>end){
		return;
	}
	int i=start;
	while(i<end&&in[i]!=post[root]){
		i++;
	}
	level[index]=post[root];
	pre(root-1-end+i,start,i-1,2*index+1);
	pre(root-1,i+1,end,2*index+2);
}
int main(){
	int n;
	int cnt=0;
	cin>>n;
	post.resize(n);
	in.resize(n);
	for(int i=0;i<n;i++){
		int num;
		cin>>num;
		post[i]=num;
	}
	for(int i=0;i<n;i++){
		int num;
		cin>>num;
		in[i]=num;
	}
	pre(n-1,0,n-1,0);
	for(int i=0;i<level.size();i++){
		if(level[i]!=-1){
			if(cnt!=0){
				cout<<" ";
			}
			cout<<level[i];
			cnt++;
		}
		if(cnt==n){
			break;
		}
	}
	return 0;
}
