//给出树的结构，让你填充成一个二叉树搜索树，然后输出层序，用dfs求中序，然后从小到大填入，然后bfs求层序，作为30分题来说有点简单
#include<iostream>
#include<vector>
#include<algorithm>
#include<queue>
using namespace std;
vector<int> temp,level;
int son[110][2],ans[110];
queue<int> b;
bool cmp(int a,int b){
	return a<b;
}
void dfs(int cur){
	if(son[cur][0]!=-1){
		dfs(son[cur][0]);
	}
	temp.push_back(cur);
	if(son[cur][1]!=-1){
		dfs(son[cur][1]);
	}
	return;
}
void bfs(int cur){
	b.push(cur);
	while(!b.empty()){
		int t=b.front();
		b.pop();
		level.push_back(t);
		for(int i=0;i<2;i++){
			if(son[t][i]!=-1){
				b.push(son[t][i]);
			}
		}
	}
	return;
}
int main(){
	int n;
	vector<int> save;
	scanf("%d",&n);
	for(int i=0;i<n;i++){
		int a,b;
		scanf("%d %d",&a,&b);
		son[i][0]=a;
		son[i][1]=b;
	}
	for(int i=0;i<n;i++){
		int num;
		scanf("%d",&num);
		save.push_back(num);
	}
	dfs(0);
	bfs(0);
	sort(save.begin(),save.end(),cmp);
	for(int i=0;i<n;i++){
		int index=temp[i];
		ans[index]=save[i];
	}
	for(int i=0;i<n;i++){
		if(i!=0){
			printf(" ");
		}
		printf("%d",ans[level[i]]);
	}
	return 0;
}
