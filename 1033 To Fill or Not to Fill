//With highways available, driving a car from Hangzhou to any other city is easy. But since the tank capacity of a car is limited,
//we have to find gas stations on the way from time to time. Different gas station may give different price.
//You are asked to carefully design the cheapest route to go.
//这个题目的核心是贪心思想，如果在某个加油站，射程范围内有更便宜的加油站，找到最近的便宜的加油站，只要加满到那个加油站的油即可，如果射程范围内没有加油站
//更加便宜，那就加满油,如果油不够走到下一个加油站，那就输出最多走了多远。
#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;
const int inf=99999999;
struct station{
	double price,dis;
};
bool cmp(station a,station b){
	return a.dis<b.dis;
}
int main(){
	double maxc,distance,ave;
	int m;
	scanf("%lf %lf %lf %d",&maxc,&distance,&ave,&m);
	vector<station> sta(m+1);
	sta[0]={0.0,distance};
	for(int i=0;i<m;i++){  
		double p,d;
		scanf("%lf %lf",&p,&d);
		sta[i+1].dis=d;
		sta[i+1].price=p;
	}
	sort(sta.begin(),sta.end(),cmp);
	double nowdis=0.0,nowprice=0.0,maxdis=0.0,totalprice=0.0,leftdis=0.0;
	if(sta[0].dis!=0){
		printf("The maximum travel distance = 0.00");
		return 0;
	}
	else{
		nowprice=sta[0].price;
	}
	while(nowdis<distance){
		maxdis=maxc*ave+nowdis;
		double minpricedis=0.0,minprice=inf;
		int flag=0;
		for(int i=0;i<=m&&sta[i].dis<=maxdis;i++){
			if(sta[i].dis<=nowdis){
				continue;
			}
			if(sta[i].price<nowprice){
				totalprice+=(sta[i].dis-nowdis-leftdis)*nowprice/ave;
				leftdis=0.0;
				nowprice=sta[i].price;
				nowdis=sta[i].dis;
				nowprice=sta[i].price;
				flag=1;
				break;
			}
			if(sta[i].price<minprice){
				minprice=sta[i].price;
				minpricedis=sta[i].dis;
			}
		}
		if(flag==0&&minprice!=inf){
			totalprice+=(nowprice*(maxc-leftdis/ave));
			leftdis=maxc*ave-(minpricedis-nowdis);
			nowprice=minprice;
			nowdis=minpricedis;
		}
		if(flag==0&&minprice==inf){
			nowdis+=maxc*ave;
			printf("The maximum travel distance = %.2f",nowdis);
			return 0;
		}
	}
	printf("%.2f",totalprice);
	return 0;
}
 
