//求一个数的所有质因数和它的幂
//质数增加的时候原数同时减小，不难
#include<iostream>
#include<algorithm>
#include<vector>
#include<cmath>
using namespace std;
struct factor{
	int p,k;
};
int prime=2;
bool isprime(int a){
	if(a==2||a==3){
		return true;
	}
	for(int i=2;i<=sqrt(a);i++){
		if(a%i==0){
			return false;
		}
	}
	return true;
}
void nextprime(){
	prime++;
	while(!isprime(prime)){
		prime++;
	}
}
int main(){
	int num,save;
	scanf("%d",&num);
	save=num;
	vector<factor> v;
	if(num==1){
		printf("%d=%d",num,num);
		return 0;
	}
	if(isprime(num)){
		printf("%d=%d",num,num);
		return 0;
	}
	while(num>=prime){
		struct factor temp;
		int f=prime;
		int g=0;
		if(num%prime==0){
			while(num%prime==0){
				g++;
				num/=prime;
			}
			temp.k=g;
			temp.p=f;
			v.push_back(temp);
		}
		nextprime();
	}
	printf("%d=",save);
	for(int i=0;i<v.size();i++){
		if(v[i].k>1){
			printf("%d^%d",v[i].p,v[i].k);
		}
		else{
			printf("%d",v[i].p);
		}
		if(i!=v.size()-1){
			printf("*");
		}
	} 
	return 0;
}
